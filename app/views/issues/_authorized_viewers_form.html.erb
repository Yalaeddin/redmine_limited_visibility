<style>
  .involved-roles .info { margin-top:5px; }
  .role { background-color:#fdd; border-radius:3px; padding:2px 5px 1px 4px; margin:1px 0 2px; cursor:pointer; display:inline-block; }
  .role:hover { background-color:#ffe9e9; }
  .role.involved { background-color:#cfb; }
  .role.involved:hover { background-color:#d7ffc6; }
  /* font awesome icons */
  .role .status-icon { width:1em; display:inline-block; }
  .role:not(.involved) .fa-icon-ok { display:none; }
  .role .fa-icon-ok { color:#080; }
  .role.involved .fa-icon-remove { display:none; }
  .role .fa-icon-remove { color:#800; }
</style>

<%  model ||= "issue"
    value ||= ""

    if model == "issue"
      viewers = []
      if @issue.new_record? # create new issue
        member = Member.find_by_user_id_and_project_id(User.current.id, @project.id)
        if member && member.roles.find_all_visibility_roles.present? # current user has at least one visibility role
          member.roles.find_all_visibility_roles.each do |r|
            viewers = viewers | r.authorized_viewers.split('|') if r.authorized_viewers
          end
        else # current user has no visibility role (can see every issues)
          viewers = Role.find_all_visibility_roles.map(&:id)
        end
      else # update existing issue
        viewers = @issue.authorized_viewers.split('|').delete_if(&:blank?) if @issue && @issue.authorized_viewers
      end
      value = viewers.join('|') + '|'
    end
%>

<script>
  $(function() {
    $('.role').on('click', function() {
      if (!$(this).hasClass('disabled')){
        $(this).toggleClass('involved')
        var authorized = []
        $('.role.involved').each(function() {
          authorized.push($(this).data('filter'))
        })
        $('#<%= model %>_authorized_viewers').val('|'+authorized.join('|')+'|')
      }
    })
  })
</script>

<p id=involved-roles class=involved-roles>
  <label><%= l(:label_involved_members) %> : </label>
  <% ids = @project.present? ? ProjectInvolvement.new(@project.id).potential_involved_roles : Role.all.map(&:id) %>
  <% Role.where(:id => ids, :limit_visibility => true).sorted.each do |role| %>
    <span class="role <%= value.split('|').include?(role.id.to_s) ? 'involved' : '' %> <%= @role==role ? "involved disabled" : "" %>" data-filter="<%= role.id %>">
      <span class=status-icon><i class=fa-icon-ok></i><i class=fa-icon-remove></i></span>
      <%= role.name %>
    </span><br/>
  <% end %>
  <!-- <em class=info style="border-top:1px solid #ccc">< l(:text_visibility_notice) ></em> -->
</p>

<%= hidden_field_tag model + '[authorized_viewers]', "#{value}" %>
